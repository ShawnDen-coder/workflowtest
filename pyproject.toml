[tool.poetry]
name = "workflowtest"
version = "0.1.0"
description = ""
authors = ["ShawnDeng-code <shawndeng1109@gmail.com>"]
readme = "README.md"
packages = [{ include = "workflowtest", from = "src" }]


[tool.poetry.dependencies]
python = ">=3.7,<4.0"
dynaconf = "^3.1.0"

[tool.poetry.group.dev.dependencies]
commitizen = ">=3.2.1"
coverage = { extras = ["toml"], version = ">=7.2.5" }
pre-commit = ">=2.21.0"
ruff = ">=0.1.3"

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
pytest = ">=7.3.1"
pytest-clarity = ">=1.0.1"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.2.1"
pytest-cases = ">=3.8.1"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.2.0"
mkdocs-git-revision-date-plugin = "^0.3.1"
mkdocstrings-python = "^1.0.0"
mkdocs-pymdownx-material-extras = "^2.0"
mkdocs-same-dir = "^0.1.1"
mkdocs-include-markdown-plugin = "^3.3.0"
mkdocs-gen-files = "^0.5.0"
mkdocs-autolinks-plugin = "^0.7.0"
mkdocs-minify-plugin = "^0.5.0"
mkdocs-git-revision-date-localized-plugin = "^1.0.0"
stringcase = "^1.2.0"
mkdocs-literate-nav = "^0.6.0"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
ignore-init-module-imports = true
line-length = 88
select = ["A", "ASYNC", "B", "BLE", "C4", "C90", "D", "DTZ", "E", "EM", "ERA", "F", "FBT", "FLY", "FURB", "G", "I", "ICN", "INP", "INT", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "S", "SIM", "SLF", "SLOT", "T10", "T20", "TCH", "TID", "TRY", "UP", "W", "YTT"]
ignore = ["E501", "PGH001", "RET504", "S101"]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]
src = ["workflowtest", "tests"]
target-version = "py37"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pycodestyle]
max-doc-length = 100

[tool.ruff.pydocstyle]
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
